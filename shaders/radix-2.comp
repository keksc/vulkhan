#version 450

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

//layout(set = 0, binding = 0) uniform writeonly image2D texSampler;

#define PI 3.1415926535897932384626433832795

vec2 cmul(vec2 a, vec2 b) {
  return vec2(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);
}
vec2 cexp(float x) {
  return vec2(cos(x), sin(x));
}
float hash(uint x) {
    return float(hash(x)) / float(0xffffffffu);
}

const float omegaPeak = 1.;
const float g = 9.81;
const float sigma1 = 0.07;
const float sigma2 = 0.09;
const float alpha = 1.;
const float gamma = 3.3;
float jonswap(float omega) {
  float sigma = (omega <= omegaPeak) ? sigma1 : sigma2;
  float omegaOverOmegaPeak = omega/omegaPeak;
  return alpha * pow(g, 2.0)/(16*pow(PI, 2.0)) * pow(omega, -5.0) * exp(-5.f/4.0*pow(omegaOverOmegaPeak, 4.0))*pow(gamma, exp(-1.0/(2.0*pow(sigma, 2.0))*pow(omegaOverOmegaPeak-1.0, 2.0)));
}

void main() {
  
}
