#version 450

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(push_constant) uniform PushConstants {
    uint step;
    bool pingpong;
} pc;

layout(binding = 0) uniform sampler2D precomputedData;
layout(binding = 1, rg32f) uniform image2D buf0;
layout(binding = 2, rg32f) uniform image2D buf1;

const float PI = 3.14159265358979323846;

vec2 cmul(vec2 a, vec2 b)
{
	return vec2(a.r * b.r - a.g * b.g, a.r * b.g + a.g * b.r);
}

void main()
{
  uvec2 id = gl_GlobalInvocationID.xy;
	vec4 data = texelFetch(precomputedData, ivec2(pc.step, id.x), 0);
	uvec2 inputsIndices = uvec2(data.ba);
  if (pc.pingpong)
	{
    vec2 a = imageLoad(buf0, ivec2(inputsIndices.x, id.y)).xy;
    vec2 b = imageLoad(buf0, ivec2(inputsIndices.y, id.x)).xy;
    vec2 c = a + cmul(vec2(data.r, -data.g), b);
    imageStore(buf1, ivec2(id), vec4(c, 0.0, 0.0));
	}
	else
	{
    vec2 a = imageLoad(buf1, ivec2(inputsIndices.x, id.y)).xy;
    vec2 b = imageLoad(buf1, ivec2(inputsIndices.y, id.x)).xy;
    vec2 c = a + cmul(vec2(data.r, -data.g), b);
    imageStore(buf0, ivec2(id), vec4(c, 0.0, 0.0));
	}
}

