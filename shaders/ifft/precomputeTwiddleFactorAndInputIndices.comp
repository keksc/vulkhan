#version 450

layout(local_size_x = 1, local_size_y = 8, local_size_z = 1) in;

layout(push_constant) uniform PushConstants {
    uint size;
} pc;

layout(rgba32f, binding = 0) uniform image2D precomputeBuffer;

const float PI = 3.14159265358979323846;

vec2 cexp(vec2 a)
{
	return vec2(cos(a.y), sin(a.y)) * exp(a.x);
}

void main()
{
  uvec2 id = gl_GlobalInvocationID.xy;
	uint b = pc.size >> (id.x + 1);
	vec2 mult = 2 * PI * vec2(0, 1) / pc.size;
	uint i = (2 * b * (id.y / b) + id.y % b) % pc.size;
	vec2 twiddle = cexp(-mult * ((id.y / b) * b));
  imageStore(precomputeBuffer, ivec2(id.xy), vec4(twiddle.x, twiddle.y, i, i + b));
  imageStore(precomputeBuffer, ivec2(id.x, id.y + pc.size / 2), vec4(-twiddle.x, -twiddle.y, i, i + b));
}
