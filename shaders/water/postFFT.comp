#version 450

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(std430, binding = 0) buffer FFTDataIn {
  vec2 FFTData[];
};

layout(std430, binding = 1) buffer DisplacementsAndNormalsOut {
  vec4 displacementsAndNormals[];
};

#include "constants.glsl"

const uint bufferSize = tileSize * tileSize;
const float lambda = -1.0;  // Should match m_Lambda from WSTessendorf

void main() {
  uvec2 gid = gl_GlobalInvocationID.xy;

  const uint idx = gid.x + gid.y * tileSize;

  const int sign = ((gid.x + gid.y) & 1) == 0 ? 1 : -1;

  float h_FT = FFTData[idx].x * float(sign);

  vec4 displacement;
  displacement.x = float(sign) * lambda * FFTData[idx + 3 * bufferSize].x;
  displacement.y = h_FT;
  displacement.z = float(sign) * lambda * FFTData[idx + 4 * bufferSize].x;
  displacement.w = 1.0;

  displacementsAndNormals[idx] = displacement;

  displacementsAndNormals[idx + bufferSize] = vec4(sign * FFTData[idx + bufferSize].x,
                              sign * FFTData[idx + 2 * bufferSize].x,
                              sign * FFTData[idx + 5 * bufferSize].x,
                              sign * FFTData[idx + 6 * bufferSize].x);

}
